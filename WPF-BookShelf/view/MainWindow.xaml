<UserControl x:Class="WPF_BookShelf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:WPF_BookShelf"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Height="550" Width="800">
    <UserControl.Resources>
        <vm:BoolToVisibilityConverter x:Key="boolToVisConverter"/>
        <vm:CategoryToImageConverter x:Key="catToImgConverter"/>
        <Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
        </Style>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="5*" MaxHeight="36" MinHeight="26" />
            <RowDefinition Height="95*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="75" />
                    <ColumnDefinition Width="75" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button x:Name="addButton" Grid.Column="0" Content="Add" Width="60" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="3" Command="{Binding Path=AddCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}"/>
                <Button x:Name="deleteButton" Grid.Column="1" Content="Delete" Width="65" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="3" Command="{Binding Path=DeleteCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}" />
            </Grid>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="7*" />
                <ColumnDefinition Width="3*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <ListView x:Name="booksListView" Margin="0,0,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ItemsSource="{Binding Path=BooksViewSource.View}" SelectedItem="{Binding Path=SelectedBook, Mode=TwoWay}">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Title" Width="120" DisplayMemberBinding="{Binding Path=Title, Mode=TwoWay}"/>
                            <GridViewColumn Header="Author" Width="120" DisplayMemberBinding="{Binding Path=Author, Mode=TwoWay}"/>
                            <GridViewColumn Header="ISBN" Width="100" DisplayMemberBinding="{Binding Path=ISBN, Mode=TwoWay}"/>
                            <GridViewColumn Header="Published" Width="80" DisplayMemberBinding="{Binding Path=Published, Mode=TwoWay, StringFormat={}{0:MM/dd/yyyy}}"/>
                            <GridViewColumn Header="Category" Width="100" DisplayMemberBinding="{Binding Path=Category, Mode=TwoWay}"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>
            <Grid Grid.Column="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" MaxHeight="40"/>
                        <RowDefinition Height="*" MaxHeight="60"/>
                        <RowDefinition Height="6*" MaxHeight="250"/> <!-- Spacer-->
                        <RowDefinition Height="*" /> <!-- Spacer-->
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="5*" />
                    </Grid.ColumnDefinitions>

                    <TextBox x:Name="filterTextBox" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Stretch" Height="23" Margin="6">
                        <TextBox.Text>
                            <Binding Path="Filter" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" TargetNullValue="''">
                                <Binding.ValidationRules>
                                    <vm:IdNotValidRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    
                    <Label Content="Filter year :" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    <Label Content="Options :" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    <!-- Filter options-->
                    <Label Content="Filter Before :" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,0,15,0"/>
                    <CheckBox x:Name="filterCheckBox" IsChecked="{Binding Path=FilterBefore}" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5,5,18,6"/>
                    <Label Content="Activate filter :" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,15,0"/>
                    <CheckBox x:Name="filterActiveCheckBox" IsChecked="{Binding Path=FilterActive}" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="5,5,18,6"/>
                </Grid>
                <Grid Visibility="{Binding Path=SelectedBook, Converter={StaticResource boolToVisConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="5*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*" MaxHeight="100"/> <!-- Spacer-->
                        <RowDefinition Height="*" MaxHeight="50"/>
                        <RowDefinition Height="*" MaxHeight="50"/>
                        <RowDefinition Height="*" MaxHeight="50"/>
                        <RowDefinition Height="*" MaxHeight="50"/>
                        <RowDefinition Height="*" MinHeight="50"/>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!-- Labels -->
                    <Label Content="Title :" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    <Label Content="Author :" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    <Label Content="ISBN :" Grid.Column="0" Grid.Row="3" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    <Label Content="Published :" Grid.Column="0" Grid.Row="4" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    <Label Content="Category :" Grid.Column="0" Grid.Row="5" HorizontalAlignment="Right" VerticalAlignment="Center"/>

                    <!-- Input -->
                    <TextBox x:Name="titleTextBox" Text="{Binding Path=SelectedBook.Title, TargetNullValue='', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch" Height="23" Margin="6"/>
                    <TextBox x:Name="authorTextBox" Text="{Binding Path=SelectedBook.Author, TargetNullValue='', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch" Height="23" Margin="6"/>
                    <TextBox x:Name="ISBNTextBox" Grid.Column="1" Grid.Row="3" HorizontalAlignment="Stretch" Height="23" Margin="6">
                        <TextBox.Text>
                            <Binding Path="SelectedBook.ISBN" TargetNullValue="" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <vm:NumberNotValidRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <DatePicker x:Name="publishedDatePicker" SelectedDate="{Binding Path=SelectedBook.Published, TargetNullValue={x:Static sys:DateTime.Now}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" HorizontalAlignment="Stretch" Grid.Row="4" VerticalAlignment="Center" Margin="6"/>
                    <vm:CategoryPicker x:Name="categoryPicker" Text="{Binding Path=SelectedBook.Category, TargetNullValue='', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ImageSource="{Binding Path=SelectedBook.Category, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource catToImgConverter}}" Grid.Column="1" Grid.Row="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="64" Margin="10"/>
                </Grid>
            </Grid>
        </Grid>

    </Grid>
</UserControl>
